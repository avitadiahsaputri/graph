import { TurnContext } from 'botbuilder';
import { ConfiguredAIOptions } from './AI';
import { DefaultConversationState, DefaultTempState, DefaultTurnState, DefaultUserState } from './DefaultTurnStateManager';
import { Plan, Planner } from './Planner';
import { PromptTemplate } from './Prompts';
/**
 * A planner used for testing.
 */
export declare class TestPlanner implements Planner<DefaultTurnState> {
    constructor(plan?: Plan, promptResponse?: string);
    readonly plan: Plan;
    readonly promptResponse?: string;
    completePrompt(context: TurnContext, state: DefaultTurnState<DefaultConversationState, DefaultUserState, DefaultTempState>, prompt: PromptTemplate, options: ConfiguredAIOptions<DefaultTurnState<DefaultConversationState, DefaultUserState, DefaultTempState>>): Promise<string | undefined>;
    generatePlan(context: TurnContext, state: DefaultTurnState<DefaultConversationState, DefaultUserState, DefaultTempState>, prompt: PromptTemplate, options: ConfiguredAIOptions<DefaultTurnState<DefaultConversationState, DefaultUserState, DefaultTempState>>): Promise<Plan>;
}
//# sourceMappingURL=TestPlanner.d.ts.map